# Вариант 10
import re

def regex(Data, regPattern):
    for _str in Data:
        result = re.search(regPattern, str(_str))
        print(_str, 'Подходит' if result else 'Не подходит')
    print("\n")
        

#                 Задание 2
#Написать регулярное выражение для проверки адреса электронной почты. 
#В электронном адресе допустимы латинские символы верхнего и нижнего регистров, цифры, точки, дефисы, подчёркивания.

emails = ['a@b.c', 'a-b@c.d.e', 'a-b_c.d@e_f-g.h',
        'a+@b.c', 'a_b.c', 'a_b@.c-d.', 'danil@purtov.top']
regPattern = r'([-0-9A-z\.]+)@([0-9A-Za-z]+)\.([0-9A-Za-z]+)'
regex(emails, regPattern)


#                 Задание 3
# Написать регулярное выражение, проверяющее строку на соответствие 
# даты заданному формату: dd.mm.yyyy. Дата в строке должна быть отделена 
# от текста пробелами. Для числа и месяца отводится строго 
# по 2 цифры, для года – 4 цифры. Проверку на допустимость чисел 
# (не более 31) и месяца (не более 12) реализовывать не нужно.

ips = ['192.168.0.1', '127.0.0.1', '0.0.0.0', '0.100.200.300', '192.168.0.', 
        'a.b.c.d', '1234.2345.3456.4567']
regPattern = r'(^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3}))'
regex(ips, regPattern)


#             задание 6
#Написать регулярное выражение, проверяющее номер телефона на соответствие российскому формату. 
#Номер должен начинаться с +7 или 8, далее в скобках один из кодов: 909, 912, 922, 
#затем цифры номера через дефис.

phones = ['+7(922)123-45-67', '8(922)123-45-67', '+7(909)123-45-67', '+7(923)123-45-67', '+5(922)123-45-67', 
        '+7(922)1234567', '+7(922)123456', True]
regPattern = r'^(\+7|8)\((909|912|922)\)[0-9]{3}\-[0-9]{2}\-[0-9]{2}'
regex(phones, regPattern)